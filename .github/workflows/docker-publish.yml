name: Deployment
run-name: üöÄ Deployment

on:
  push:
    branches: [ "main" ]

env:
  REGISTRY: docker.io
  ACCOUNT: ${{ secrets.DOCKER_HUB_USER_NAME }}
  IMAGE_NAME_BACKEND: share-plus-backend
  IMAGE_TAG: ${{ github.sha }}
jobs:
  build-and-push:
    name: üèóÔ∏è Build Docker Image
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install cosign
        uses: sigstore/cosign-installer@6e04d228eb30da1757ee4e1dd75a0ec73a653e06 #v3.1.1
        with:
          cosign-release: 'v2.1.1'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.ACCOUNT }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.ACCOUNT }}/${{ env.IMAGE_NAME_BACKEND }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.ACCOUNT }}/${{ env.IMAGE_NAME_BACKEND }}:${{ env.IMAGE_TAG }}, ${{ env.REGISTRY }}/${{ env.ACCOUNT }}/${{ env.IMAGE_NAME_BACKEND }}:latest
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy-kubernetes:
    name: üõ´ Deploy
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - uses: actions/checkout@v4
        with:
          repository: cesarapires/gitops-projects
          ref: main
          token: ${{ secrets.GIT_HUB_TOKEN }}

      - name: Kustomize
        uses: imranismail/setup-kustomize@v1
        with:
          kustomize_version: v3.6.1

      - name: Update Kubernetes
        run: |
          cd ${{ env.IMAGE_NAME_BACKEND }}/kubernetes
          kustomize edit set image ${{ env.IMAGE_NAME_BACKEND }}-api=${{ env.ACCOUNT }}/${{ env.IMAGE_NAME_BACKEND }}:${{ env.IMAGE_TAG }}
          cat kustomization.yaml

      - name: Commit
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "Deploy Action"
          git commit -am "chore: bump image tag"

      - name: Push Changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GIT_HUB_TOKEN }}
          repository: cesarapires/gitops-projects
          branch: main
  sonarqube:
    name: üõ∞Ô∏è SonarQube
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 22
        uses: actions/setup-java@v1
        with:
          java-version: 22
      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        run: cd backend && mvn -DskipTests -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=software-engeenering-backend -Dsonar.projectName='Software Engeenering Backend' -Dsonar.token=${{ secrets.SONAR_GITHUB_ACTIONS_TOKEN }} -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }}
